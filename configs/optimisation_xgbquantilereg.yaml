
experiment: my_run
patchsize: 0
memory_fraction: 0.5

features:
  - name: my continuous features
    type: continuous
    files:
      - path: configs/data/sirsam/er_depg.tif
      - path: configs/data/sirsam/sagawet_b_sir.tif
      - path: configs/data/sirsam/dem_foc2.tif
      - path: configs/data/sirsam/outcrop_dis2.tif
      - path: configs/data/sirsam/k_15v5.tif
      - path: configs/data/sirsam/relief_apsect.tif
      - path: configs/data/sirsam/LATITUDE_GRID1.tif
      - path: configs/data/sirsam/LONGITUDE_GRID1.tif
    transforms:
#      - standardise
#      - whiten:
#          keep_fraction: 0.8
    imputation: none

preprocessing:
  imputation: none
  transforms:
#    - whiten:
#        keep_fraction: 0.8

targets:
  file: configs/data/geochem_sites.shp
  property: K_ppm_imp
  group_targets:
    group_col: Batch_No
    groups_eps: 0.09

learning:
  algorithm: xgbquantileregressor
  arguments:
    alpha: 0.05
    target_transform: standardise
    max_depth: 11
    learning_rate: .024
    n_estimators: 400
    #    silent: True
    # objective: reg:squarederror # reg:gamma # reg:linear
    nthread: 1
    gamma: 0.1175
    min_child_weight: 1
    max_delta_step: 2.46
    subsample: 0.65
    colsample_bytree: 0.5
    colsample_bylevel: 0.43
    # #    colsample_bynode: 1
    reg_alpha: 0
    reg_lambda: 1
    scale_pos_weight: 1
    n_jobs: -1
    base_score: 0.5
    booster: gbtree
    random_state: 1
    delta: 1.0
#    n_estimators: 10
  optimisation:
    searchcv_params:
      n_iter: 6
      cv: 2
      verbose: 1000
      n_points: 3
      n_jobs: 6
    params_space:
#      delta: Real(0.01, 10, prior="uniform")
      thresh: Real(0.01, 10, prior="uniform")
      variance: Real(1, 10, prior="uniform")
#      max_depth: Integer(1, 15)
#      learning_rate: Real(10 ** -5, 10 ** 0, prior="log-uniform")
#      n_estimators: Integer(50, 200)
#      min_child_weight: Integer(1, 10)
#      max_delta_step: Integer(0, 10)
#      gamma: Real(0, 0.5, prior="uniform")
#      colsample_bytree: Real(0.3, 0.9, prior="uniform")
#      subsample: Real(0.01, 1.0, prior='uniform')
#      colsample_bylevel: Real(0.01, 1.0, prior='uniform')
#      colsample_bynode: Real(0.01, 1.0, prior='uniform')
#      reg_alpha: Real(1, 100, prior='uniform')
#      reg_lambda: Real(0.01, 10, prior='log-uniform')

prediction:
  quantiles: 0.95
  outbands: 1


validation:
  #- feature_rank
  - k-fold:
      folds: 2
      random_seed: 1

output:
  directory: xgb_base/
