# EC metadata

features:
  - name: my pickle files
    type: pickle
    files:
      covariates: features.pk
      targets: targets.pk
      featurevec: featurevec.pk  # used for cubist only
      rawcovariates: rawcovariates.csv  # intersected covariates saved as csv
      rawcovariates_mask: rawcovariates_mask.csv  #
      plot_covariates: false
  - name: my features
    type: continous
    files:
      # - path: /short/ge3/jrw547/GA-cover2/Th_v1.tif
        - list: ./list_main.txt  # list_for_rank.txt # conv_feature_ranked.txt
      # - directory: /short/ge3/jrw547/GA-cover2
    transforms:
      - centre
      - standardise
    imputation: mean

preprocessing:
  # imputation: none
  # imputation: gaus
  # imputation: nn
  imputation: mean

  transforms:
    # - whiten:
        # keep_fraction: 0.8

targets:
  file: ./April_24_EC_Albers.shp  # April_24_EC_Albers.shp # /g/data/ge3/john/jobs/NGSA_NAGS/NGSA_NAGS_albers.shp  # K_Th_U_Albers_T_no_line_tot.shp # Rank_subset.shp #K_Th_U_Albers_T_no_line_tot.shp   # ./K_Th_U_Albers_clip.shp
  property: tot30_log # 0_30Total  # Log_Fe2O3T  # Log_K20___
#  resample:
#    - spatial:
#        arguments:
#          rows: 50
#          cols: 50
#          bootstrap: False
#          output_samples: 25000
#    - value:
#        arguments:
#          bins: 2500
#          bootstrap: False
#          output_samples: 25000

#mask:
#  file: /g/data/ge3/john/jobs/nat_majors/albers_mask_85_cropped.tif
#  retain: 0

learning:
    algorithm: multirandomforest
    arguments:
      n_estimators: 20
      target_transform: standardise
      forests: 20
      min_samples_leaf: 5
      min_samples_split: 5
      max_depth: 10


optimisation:
  algorithm: transformedrandomforest
  hyperparameters:
    n_estimators: [100, 300]
    target_transform: [identity, standardise]
    min_samples_split: [2, 5, 10, 20]
    max_depth: [5, 10, 20, 30]

 #learning:
#  algorithm: mlkrige
#  arguments:
#    ml_method: ols
#    ml_params: {target_transform: log}
#    method: ordinary
#    variogram_model: linear
#    n_closest_points: 300
#    verbose: True
#    ml_score: True


prediction:
  quantiles: 0.95
  outbands: 10

validation:
#   - feature_rank
   - parallel
   - k-fold:
      folds: 10
      random_seed: 1

output:
  directory: .
