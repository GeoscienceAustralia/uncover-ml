# vi:syntax=python

from os import path


#
# Path Settings
#

# Location of data
# data_dir = "/short/ge3/jrw547/Murray_datasets"
data_dir = "/short/ge3/dms599/Murray_datasets"

output_dir = "."


#
# Target Settings
#

# Shape file with target variable info
# target_file = "Targets_V_final_inside.shp"
# target_file = "Targets_shallow_filtered.shp"
target_file = "Targets_V6_inside.shp"

# Target variable name (in shape file)
target_var = "depth"

export_targets = True


# Crossval settings

cross_validate = True
folds = 5
crossval_seed = 1


#
# Feature settings
#


# Automatically detect integer-valued files and use one-hot encoding?
onehot = False

# Patch size to extract around targets (0 = 1x1 pixel, 1 = 3x3 pixels etc)
patchsize = 0

# Impute missing values?
impute = True

# Starndardise each input dimension? (0 mean, 1 std)
transform = 'standardise'

# Fraction of dimensions to keep *if* whitening
pca_frac = 0.5

# Estimate the relative importance of each feature
rank_features = False


#
# Algorithm settings
#


# Iterate through this dictionary of algorithm name and arguments:
algdict = {

    # Bayesian linear regression
    # "bayesreg": {},

    # Approximate Gaussian process, for large scale data
    # "approxgp": {'kern': 'rbf', 'lenscale': 100., 'nbases': 50},

    # Approximate Gaussian process, for large scale data
    # "sgdapproxgp": {
    #              'target_transform': 'rank',
    #              'kern': 'matern52',
    #              'lenscale': 100.,
    #              'nbases': 50,
    #              'maxiter': 3000},

    "depthregress": {
                 'kern': 'matern52',
                 'lenscale': 100.,
                 'nbases': 100,
                 'maxiter': 10000,
                 'falloff': 0.1,
                 'beta1': 0.3,
                 'beta2': 0.5},
    

    # Support vector machine (regressor)
    # "svr": {'gamma': 1. / 300, 'epsilon': 0.05},
    # "svr": {},

    # Random forest regressor
    # "randomforest": {'n_estimators': 500},

    # ARD Linear regression
    # "ardregression": {},

    # Kernel ridge regression
    # 'kernelridge': {'kernel': 'rbf'},

    # Decision tree regressor
    # 'decisiontree': {},

    # Extra tree regressor
    # 'extratree': {},
}

#
# Prediction settings
#

# How much data to keep in memory at a time
memory_fraction = 0.05

# Name of the prediction algorithm
# algorithm = 'svr'
# algorithm = 'bayesreg'
# algorithm = "sgdapproxgp"
algorithm = 'depthregress'
# algorithm = 'approxgp'
# algorithm = 'randomforest'

# Quantiles
quantiles = 0.95
